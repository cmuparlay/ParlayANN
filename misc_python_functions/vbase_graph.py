import matplotlib.pyplot as plt
import argparse
from textwrap import wrap
import math



def parse_input_file(path : str):
    """
    parses file generated by vbase_graph.cpp and returns data for graph
    """
    with open(path, 'r') as f:
        
        # command = f.readline()
        # query_index = int(f.readline())
        lines = [line.rstrip().split(",") for line in f ]

    x_axis, y_axis = list(zip(*lines))
    x_axis = [int(i) for i in x_axis]
    y_axis = [math.log(int(i) + 1) for i in y_axis]
                                                    
    return  x_axis, y_axis

def make_vbase_graph( x_axis : list[int], y_axis : list[int]):
    """
    create the vbase graph and saves it in the current directory with name : [title].png
    title: should contain information about graph, query node, query params
    x_axis: index of current node in the visisted sequence to query
    y_axis: distance from query
    """
    current_index = 0
    for i in range(20):
        for j in range(current_index + 1, current_index + 100):
            if x_axis[j] == 0:
                plt.plot(x_axis[current_index:j], y_axis[current_index:j], 'x-', alpha = 0.8)
                print(x_axis[current_index:j], y_axis[current_index:j])
                current_index = j

                break
            
    plt.suptitle('\n'.join(wrap("hello", 60)))
    plt.tight_layout()
    plt.savefig("graph.png")
    


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-p", "--path", help = "path to the input file generated by vbase_graph.cpp")
    args = parser.parse_args()
    path = args.path
    x_axis, y_axis = parse_input_file(path)
    make_vbase_graph(x_axis, y_axis)
    
